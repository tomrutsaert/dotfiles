[docker-ublue]
image=ghcr.io/ublue-os/docker-distrobox:latest
# Change the group name to your desired group. Otherwise falls back to docker @ gid 252
#additional_flags="-e DOCKERGROUP=$group"
init=true
nvidia=true
root=true
entry=false
volume="/var/lib/docker"
init_hooks="usermod -aG docker ${USER}"

[docker-luca]
image=registry.opensuse.org/opensuse/distrobox:latest
pull=true
init=true
root=true
entry=false
start_now=true
unshare_ipc=false
unshare_netns=false
unshare_process=true
unshare_devsys=false
additional_packages="docker socat"
init_hooks="systemctl enable docker"
init_hooks=sh -c "while true; do sleep 1; socat UNIX-LISTEN:/run/host/run/docker.sock,fork,group=luca-linux,umask=007 UNIX-CONNECT:/var/run/docker.sock; done" &

[libvirt]
image=registry.opensuse.org/opensuse/distrobox:latest
pull=true
init=true
root=true
entry=true
start_now=true
unshare_ipc=false
unshare_netns=false
unshare_process=true
unshare_devsys=false
pre_init_hooks="zypper addlock kernel-*"
additional_packages="patterns-server-kvm_server patterns-server-kvm_tools"
additional_packages="qemu-arm qemu-ppc qemu-s390x qemu-extra qemu-linux-user qemu-spice virtiofsd"
additional_packages="qemu-hw-display-virtio-gpu qemu-hw-display-virtio-gpu-pci at-spi2-core"
init_hooks="systemctl enable virtqemud.socket virtnetworkd.socket virtstoraged.socket virtnodedevd.socket"
init_hooks="usermod -aG libvirt $USER"